# TODO: prune pyspark, luigi stuff inc. this logging.cfg; obsolete in favor of src/main/resources/simplelogger.properties

# Note additional logging via eliot.
#
# see section 15.8.3. Configuration file format in
# http://docs.python.org/2/library/logging.config.html
#
# also:
# https://github.com/pysysops/docker-luigi-taskrunner/blob/master/etc/luigi/logging.cfg
# https://pypi.python.org/pypi/python-json-logger
# https://stedolan.github.io/jq/manual/v1.5/
#
# Logging to JSON lets us do fun stuff such as:
#
# $ < log/grouse-detail.json jq --compact-output -C \
#   'select(.args|objects|.event == "inserted chunk") |
#    [.asctime, .process, .args.filename, .args.lineno, .args.into,
#     {elapsed: (.elapsed[1] | split("."))[0],
#      rowcount: .args.rowcount,
#      krowpersec: (.args.rowcount / .elapsed[2] * 1000 * 60 + 0.5 | floor)}]'
# ["2017-03-16 21:20:24",10770,"cms_patient_dimension.sql",9,"\"DCONNOLLY\".patient_dimension",
#  {"elapsed":"0:01:39","rowcount":419835,"krowpersec":252}]
# ["2017-03-16 21:22:12",10770,"cms_patient_dimension.sql",9,"\"DCONNOLLY\".patient_dimension",
#  {"elapsed":"0:01:47","rowcount":419835,"krowpersec":234}]


[loggers]
# keys=root,luigi_debug
# keys=root,luigi
keys=root

[logger_root]
level=INFO
handlers=console

[logger_luigi]
level=INFO
handlers=console
qualname=luigi-interface

[handlers]
keys=console

[handler_console]
level=INFO
class=StreamHandler
args=(sys.stderr,)
formatter=timed


[formatters]
# keys=timed, json
keys=timed

[formatter_timed]
class=logging.Formatter
# %(name)s?
format=%(asctime)s %(process)s %(levelname)s: %(message)s
datefmt=%02H:%02M:%02S
